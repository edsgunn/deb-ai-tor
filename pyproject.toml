[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "deb-ai-tor"
version = "0.1.0"
authors = [
  { name = "Edward Gunn", email = "edwardcharlesgunn@gmail.com" },
]
description = "A great package."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "pettingzoo",
  "gymnasium",
  "pytest",
  "transformers",
  "torch",
  "accelerate",
  "ipywidgets",
]

[project.optional-dependencies]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "pre-commit",
]

[project.urls]
Homepage = "https://github.com/edsgunn/deb-ai-tor"
"Bug Tracker" = "https://github.com/edsgunn/deb-ai-tor/issues"
Discussions = "https://github.com/edsgunn/deb-ai-tor/discussions"
Changelog = "https://github.com/edsgunn/deb-ai-tor/releases"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]
pythonpath = ["src"]

[tool.coverage]
run.source = ["deb_ai_tor"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]



[tool.ruff]
src = ["src"]
exclude = []
line-length = 88  # how long you want lines to be

[tool.ruff.format]
docstring-code-format = true  # code snippets in docstrings will be formatted

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
]
ignore = [
  "PLR",    # Design related pylint codes
  "ISC001", # Conflicts with formatter
]
unfixable = [
  "F401",   # Would remove unused imports
  "F841",   # Would remove unused variables
]
flake8-unused-arguments.ignore-variadic-names = true  # allow unused *args/**kwargs
